# Rprofile settings

# Lincoln A. Mullen | lincoln@lincolnmullen.com | http://lincolnmullen.com
# MIT License <http://lmullen.mit-license.org/>

# Some settings from these useRs:
# http://gettinggeneticsdone.blogspot.com/2013/07/customize-rprofile.html?m=1
# http://inundata.org/2011/09/29/customizing-your-rprofile/

if(interactive()){

  # Load the packages we use most when using R as a REPL
  library(devtools, warn.conflicts = FALSE)
  library(knitr, warn.conflicts = FALSE)
  # library(rgeos, warn.conflicts = FALSE)
  # library(rgdal, warn.conflicts = FALSE)
  library(ggplot2, warn.conflicts = FALSE, quietly = TRUE)
  library(ggmap, warn.conflicts = FALSE)
  library(plyr, warn.conflicts = FALSE)
  library(reshape2, warn.conflicts = FALSE)
  library(lubridate, warn.conflicts = FALSE)
  library(dplyr, warn.conflicts = FALSE)

  # Settings recommended for devtools
  # https://github.com/hadley/devtools#other-tips
  options(
    repos = c("http://cran.rstudio.com"),
    width = 160,
    prompt = "$ ",
    editor = "vim",
    browserNLdisabled = TRUE,
    deparse.max.lines = 2,
    devtools.name = "Lincoln Mullen",
    devtools.desc.author = "Lincoln Mullen <lincoln@lincolnmullen.com> [aut, cre]"
    )
}

# Big history 
Sys.setenv(R_HISTSIZE='100000')

# Create a new invisible environment for all the functions to go
# in so it doesn't clutter the workspace.
.env <- new.env()

# Read data on clipboard.
.env$read.cb <- function(...) {
  ismac <- Sys.info()[1]=="Darwin"
  if (!ismac) read.table(file="clipboard", ...)
  else read.table(pipe("pbpaste"), ...)
}

# List objects and classes (from @_inundata)
.env$lsa <- function() {
  obj_type <- function(x) { class(get(x)) }
  foo=data.frame(sapply(ls(envir=.GlobalEnv),obj_type))
  foo$object_name=rownames(foo)
  names(foo)[1]="class"
  names(foo)[2]="object"
  return(unrowname(foo))
}

# List all functions in a package (also from @_inundata)
.env$lsp <-function(package, all.names = FALSE, pattern) {
  package <- deparse(substitute(package))
  ls(
     pos = paste("package", package, sep = ":"),
     all.names = all.names,
     pattern = pattern
     )
}

# Override q() to not save by default. Same as saying q("no").
.env$q <- function (save="no", ...) {
  quit(save=save, ...)
}

# Open the current working directory in Nautilus/Finder
.env$o <- function(...) {
  if(Sys.info()[1]=="Linux") system("xdg-open .")
  if(Sys.info()[1]=="Darwin") system("open .")
}

# Attach all the variables above
attach(.env, warn.conflicts = FALSE)

.First <- function() {
  if(interactive()) {
    cat("\nLoaded .Rprofile at", date(), "\n\n")
  }
}

.Last <- function() {
  if(interactive()) {
    cat("\nExiting R at", date(), "\n\n")
  }
}

# A function that tells me which packages are out of date
# check.packages <- function() {
#   if (!is.null(utils::old.packages())) {
#     old_packages <- utils::old.packages()
#     cat("Notification:", dim(old_packages)[1], "packages are out of date \n")
#     cat(unname(old_packages[, 1]), sep = ",", "\n")
#   }
#   if (is.null(utils::old.packages())) {
#     cat("All packages are current \n")
#   }
# }
